{{- $host := pluck .Values.werf.env .Values.host | first | default .Values.host._default  }}
{{- if  hasPrefix "review" .Values.werf.env }}
{{- $host = ( printf "%s.%s" .Values.werf.env (pluck "dev" .Values.host | first | default .Values.host._default ) | lower ) }}
{{- end }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tuf-router
  annotations:
spec:
  ingressClassName: {{ pluck .Values.werf.env .Values.ingressClassName | first | default .Values.ingressClassName._default }}
  tls:
  - hosts:
      - {{ $host }}
      - ru.{{ $host }}
{{- if eq .Values.werf.env "production" }}
    secretName: tls-{{ $host }}
{{- else }}
    secretName: ingress-le-tls
{{- end }}
  rules:
  - host: {{ $host }}
    http:
      paths:
      - path: /targets/
        pathType: Prefix
        backend:
          service:
            name: tuf-router
            port:
              name: http
      - path: /download/
        pathType: Prefix
        backend:
          service:
            name: tuf-router
            port:
              name: http
  - host: ru.{{ $host }}
    http:
      paths:
      - path: /targets/
        pathType: Prefix
        backend:
          service:
            name: tuf-router
            port:
              name: http
      - path: /download/
        pathType: Prefix
        backend:
          service:
            name: tuf-router
            port:
              name: http
