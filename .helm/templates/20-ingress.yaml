{{- $host := pluck .Values.werf.env .Values.host | first | default .Values.host._default  }}
{{- if  hasPrefix "review" .Values.werf.env }}
{{- $host = ( printf "%s.%s" .Values.werf.env (pluck "dev" .Values.host | first | default .Values.host._default ) | lower ) }}
{{- end }}
{{- if eq .Values.werf.env "production" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Original-URI         $request_uri;
      ssi on;
      ssi_silent_errors on;
{{- include "rewrites" . | indent 6 }}
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
      - {{ $host }}
      - ru.{{ $host }}
      - www.{{ $host }}
    secretName: tls-{{ $host }}
  rules:
  - host: {{ $host }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend
            port:
              name: http
  - host: ru.{{ $host }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend
            port:
              name: http
{{- else }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Original-URI         $request_uri;
      ssi on;
      ssi_silent_errors on;
{{- include "rewrites" . | indent 6 }}
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email
    nginx.ingress.kubernetes.io/auth-signin: https://$host/dex-authenticator/sign_in
    nginx.ingress.kubernetes.io/auth-url: https://werfio-dex-authenticator.{{ $.Values.werf.namespace }}.svc.cluster.local/dex-authenticator/auth
spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
      - {{ $host }}
    secretName: tls-{{ $host }}
  rules:
  - host: {{ $host }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend
            port:
              name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ru
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Original-URI         $request_uri;
      ssi on;
      ssi_silent_errors on;
{{- include "rewrites" . | indent 6 }}
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email
    nginx.ingress.kubernetes.io/auth-signin: https://$host/dex-authenticator/sign_in
    nginx.ingress.kubernetes.io/auth-url: https://werfio-ru-dex-authenticator.{{ $.Values.werf.namespace }}.svc.cluster.local/dex-authenticator/auth
spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
      - {{ $host }}
    secretName: tls-{{ $host }}
  rules:
  - host: ru.{{ $host }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend
            port:
              name: http
{{- end }}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Chart.Name }}-cert
spec:
  secretName: tls-{{ $host }}
  issuerRef:
    kind: ClusterIssuer
{{- if hasPrefix "review" .Values.werf.env }}
    name: letsencrypt-staging
{{- else }}
    name: letsencrypt
{{- end }}
  commonName: {{ $host }}
  dnsNames:
  - {{ $host }}
  - ru.{{ $host }}
{{- if eq .Values.werf.env "production" }}
  - www.{{ $host }}
{{- end }}
