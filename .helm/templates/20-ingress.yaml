{{- $host := pluck .Values.werf.env .Values.host | first | default .Values.host._default  }}
{{- if  hasPrefix "review" .Values.werf.env }}
{{- $host = ( printf "%s.%s" .Values.werf.env (pluck "dev" .Values.host | first | default .Values.host._default ) | lower ) }}
{{- end }}

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: main
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Original-URI         $request_uri;
      ssi on;
      ssi_silent_errors on;
{{- include "rewrites" . | indent 6 }}
{{- if eq .Values.werf.env "production" }}
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
{{- else }}
    nginx.ingress.kubernetes.io/auth-url: http://basic-auth.kube-basic-auth.svc.cluster.local/werfio
{{- end }}
spec:
  tls:
  - hosts:
      - {{ $host }}
      - ru.{{ $host }}
{{- if eq .Values.werf.env "production" }}
      - www.{{ $host }}
{{- end }}
    secretName: tls-{{ $host }}
  rules:
  - host: {{ $host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: backend
          servicePort: http
  - host: ru.{{ $host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: backend
          servicePort: http
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: {{ .Chart.Name }}-cert
spec:
  secretName: tls-{{ $host }}
  issuerRef:
    kind: ClusterIssuer
{{- if hasPrefix "review" .Values.werf.env }}
    name: letsencrypt-staging
{{- else }}
    name: letsencrypt
{{- end }}
  commonName: {{ $host }}
  dnsNames:
  - {{ $host }}
  - ru.{{ $host }}
{{- if eq .Values.werf.env "production" }}
  - www.{{ $host }}
{{- end }}
  acme:
    config:
    - http01:
        ingressClass: nginx
      domains:
      - {{ $host }}
      - ru.{{ $host }}
{{- if eq .Values.werf.env "production" }}
      - www.{{ $host }}
{{- end }}
