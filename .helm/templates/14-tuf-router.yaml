apiVersion: apps/v1
kind: Deployment
metadata:
  name: tuf-router
  annotations:
    "werf.io/replicas-on-creation": "2"
  labels:
    service: tuf-router
spec:
  minReadySeconds: 5
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      service: tuf-router
  template:
    metadata:
      labels:
        service: tuf-router
    spec:
      imagePullSecrets:
        - name: github-werfio
      containers:
        - name: nginx
          command: ["nginx", "-g", "daemon off;"]
          image: {{ index .Values.werf.image "tuf-router" }}
{{- include "resources" . | indent 10 }}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: tuf-router
spec:
  clusterIP: None
  selector:
    service: tuf-router
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: tuf-router
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: tuf-router
  updatePolicy:
    updateMode: "Initial"
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: tuf-router
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      service: tuf-router
