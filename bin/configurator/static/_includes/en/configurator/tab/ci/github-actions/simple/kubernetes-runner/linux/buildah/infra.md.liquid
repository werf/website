> **_Important_**: this section describes preparing the infrastructure for self-hosted GitHub Runner

### Requirements

* GitHub Actions;
* Kubernetes cluster;
* Helm;
* A host to run GitHub Runner, with:
  
  * Bash;

### Enable unprivileged user namespaces (required on worker nodes)

```shell
sudo sysctl -w kernel.unprivileged_userns_clone=1
echo 'kernel.unprivileged_userns_clone = 1' | sudo tee -a /etc/sysctl.conf
```

### Install the GitHub Actions Runner Controller (ARC)

Install the Helm chart for the ARC controller:

```shell
helm install arc \
  --namespace arc-systems \
  --create-namespace \
  oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set-controller
```

### Create Kubernetes resources

```shell
kubectl apply -f - <<EOF
apiVersion: v1
kind: ConfigMap
metadata:
  name: job-template-gha-runner-werf
  namespace: arc-runners
data:
  content: |
    spec:
      serviceAccountName: arc-runner-sa
      securityContext:
        runAsUser: 1001
      containers:
        - name: \$job
EOF
```

```shell
kubectl apply -f - <<EOF
apiVersion: v1
kind: ServiceAccount
metadata:
  name: arc-runner-sa
  namespace: arc-runners
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: arc-runner-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: arc-runner-sa
    namespace: arc-runners
EOF

```

> **Note**
> For greater security, consider creating a more restricted ClusterRole/Role and using it instead of the `cluster-admin` cluster role above.

### Deploy

Create a file `values.yaml` with the following content:

```yaml
githubConfigUrl: "https://github.com/myenterprise/myorg/myrepo"
githubConfigSecret:
  github_token: "<PAT>"
template:
  spec:
    serviceAccountName: arc-runner-sa
    containers:
      - name: runner
        image: ghcr.io/actions/actions-runner:latest
        command: ["/home/runner/run.sh"]
        env:
          - name: ACTIONS_RUNNER_CONTAINER_HOOKS
            value: /home/runner/k8s/index.js
          - name: ACTIONS_RUNNER_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
            value: "true"
          - name: ACTIONS_RUNNER_CONTAINER_HOOK_TEMPLATE
            value: /home/runner/job-template/content
        volumeMounts:
          - name: work
            mountPath: /home/runner/_work
          - name: job-template
            mountPath: /home/runner/job-template
            readOnly: true
        resources:
          requests:
            cpu: 400m
            memory: 800Mi
    volumes:
      - name: job-template
        configMap:
          name: job-template-gha-runner-werf
      - name: work
        ephemeral:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: "<your-storageClassName>"
              resources:
                requests:
                  storage: 1Gi
job:
  enabled: true
  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      memory: 2048Mi
```

```shell
helm install arc-runner-set -f values.yaml \
  --create-namespace \
  --namespace arc-runners \
  oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set
```