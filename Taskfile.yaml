version: "3"

silent: true

env: {}

vars:
  frameworks: "django golang java_springboot laravel nodejs rails"
  languages: "ru en"
  framework_template_dir: "_pages/guides/framework_id"

tasks:
  # default:
  #   cmds:
  #     - task: xxx

  # TODO: specify target framework
  gen:pages:
    desc: "Generate pages for all existing frameworks using framework_id folder as the source data"
    cmds:
      - |
        for framework in {{.frameworks}}
        do
          for lang in {{.languages}}
          do
            target_dir=pages_$lang/guides/$framework

            echo "# Regenerate $framework pages ($lang)"
            rm -rf $target_dir
            cp -a {{.framework_template_dir}} $target_dir
            find $target_dir -type f -exec sed -i -e "s|framework_id|$framework|g" {} \;

            if [ "x$framework" = "xgolang" ]
            then
              echo 1>&2 "WARNING: Removing $target_dir/200_real_apps because no content available for $framework at the moment"
              rm -rf $target_dir/200_real_apps*
            fi

            echo
          done
        done

      - |
        # FIXME: this page not available for other frameworks and languages yet
        git checkout pages_ru/guides/rails/200_real_apps/60_cron.md

  gen:demo:
    desc: "Generate asciinema werf demos"
    cmds:
      - task: gen:demo:_setup
      - task: gen:demo:_build
      - task: gen:demo:_test
      - task: gen:demo:_distribute
      - task: gen:demo:_deploy
      - task: gen:demo:_cleanup

  gen:demo:_setup:
    desc: "Setup (reset if already setup) Kubernetes cluster with the self-hosted container registry"
    cmds:
      - scripts/record-site-animations/reset.sh

  gen:demo:_build:
    desc: "Generate asciinema werf build demo"
    dir: scripts/record-site-animations/sample-app
    cmds:
      - ../record-build.sh ../../../assets/videos/build.cast --overwrite

  gen:demo:_test:
    desc: "Generate asciinema werf test demo"
    dir: scripts/record-site-animations/sample-app
    cmds:
      - ../record-test.sh ../../../assets/videos/test.cast --overwrite

  gen:demo:_distribute:
    desc: "Generate asciinema werf distribute demo"
    dir: scripts/record-site-animations/sample-app
    cmds:
      - ../record-distribute.sh ../../../assets/videos/distribute.cast --overwrite

  gen:demo:_deploy:
    desc: "Generate asciinema werf deploy demo"
    dir: scripts/record-site-animations/sample-app
    cmds:
      - ../record-deploy.sh ../../../assets/videos/deploy.cast --overwrite

  gen:demo:_cleanup:
    desc: "Generate asciinema werf cleanup demo"
    dir: scripts/record-site-animations/sample-app
    cmds:
      - ../record-cleanup.sh ../../../assets/videos/cleanup.cast --overwrite

  install:demo-tools-ubuntu:
    desc: "Install tools needed to record werf demos"
    cmds:
      # NOTE: also we need werf itself
      - sudo apt install pv asciinema
      - wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
