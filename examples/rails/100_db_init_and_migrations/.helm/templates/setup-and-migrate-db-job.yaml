apiVersion: batch/v1
kind: Job
metadata:
  # [<ru>] Добавим версию текущего Helm-релиза, чтобы при каждом деплое пересоздавать эту Job.
  # [<ru>] Это позволит нам вносить в Job изменения. По умолчанию Job почти неизменяема (immutable).
  name: "setup-and-migrate-db-rev{{ .Release.Revision }}"
spec:
  # [<ru>] Не будем перезапускать подготовку БД, если не получилось её выполнить.
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      imagePullSecrets:
      - name: registrysecret
      # [<snippet wait-db-container>]
      initContainers:
      - name: wait-db-deployed
        # [<ru>] Выберем образ с утилитой kubectl, версия которой соответствует кластеру, в который происходит деплой.
        image: "bitnami/kubectl:{{ .Capabilities.KubeVersion.Major }}.{{ .Capabilities.KubeVersion.Minor }}"
        command:
        - sh
        - -ec
        - |
          # [<ru>] Перестрахуемся от возможных race conditions при деплое нового релиза.
          sleep 2
          # [<ru>] Дождёмся деплоя/обновления БД.
          kubectl rollout status statefulset/mysql
      # [<endsnippet wait-db-container>]
      # [<snippet prepare-db-container>]
      containers:
      - name: setup-and-migrate-db
        image: {{ .Values.werf.image.basicapp | quote }}
        command: ["bundle", "exec", "rails", "db:prepare"]
        # [<endsnippet prepare-command>]
        # [<ru>] Контейнер должен иметь те же переменные окружения, что и при запуске самого приложения.
        env:
        - name: "RAILS_ENV"
          value: "production"
        - name: "SECRET_KEY_BASE"
          value: "b3961a122598974241215adb93e7ca326f39d9c0268bbc39817c27bb929526c0edda2fb7641cf88af58fb2a7ebf6fe010970d0a7245b87271c3774be6d09bb6c"
      # [<endsnippet prepare-db-container>]
