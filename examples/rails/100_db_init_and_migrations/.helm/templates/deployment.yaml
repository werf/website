apiVersion: apps/v1
kind: Deployment
metadata:
  name: basicapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: basicapp
  template:
    metadata:
      labels:
        app: basicapp
    spec:
      imagePullSecrets:
      - name: registrysecret
      # [<snippet wait-prepare-db-container>]
      initContainers:
      - name: wait-db-setup-and-migrations
        # [<ru>] Выберем образ с утилитой kubectl, версия которой соответствует кластеру, в который происходит деплой.
        image: "bitnami/kubectl:{{ .Capabilities.KubeVersion.Major }}.{{ .Capabilities.KubeVersion.Minor }}"
        command:
        - sh
        - -ec
        - |
          # [<ru>] Перестрахуемся от возможных race conditions при деплое нового релиза.
          sleep 2
          # [<ru>] Дождёмся выполнения Job с инициализацией/миграциями БД.
          kubectl wait --for condition=Complete "job/setup-and-migrate-db-rev{{ .Release.Revision }}"
      # [<endsnippet wait-prepare-db-container>]
      containers:
      - name: basicapp
        image: {{ .Values.werf.image.basicapp | quote }}
        # [<snippet app-command>]
        command: ["bundle", "exec", "puma"]
        # [<endsnippet app-command>]
        ports:
        - containerPort: 3000
        env:
        - name: "RAILS_ENV"
          value: "production"
        - name: "SECRET_KEY_BASE"
          value: "b3961a122598974241215adb93e7ca326f39d9c0268bbc39817c27bb929526c0edda2fb7641cf88af58fb2a7ebf6fe010970d0a7245b87271c3774be6d09bb6c"
