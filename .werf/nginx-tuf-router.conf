user  nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 500;
    multi_accept on;
    use epoll;
}

http {

    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '/app/?.lua;;';

    # set search paths for Lua external libraries written in C (can also use ';;'):
    lua_package_cpath '/app/?.so;;';

    resolver 1.1.1.1 8.8.8.8 valid=30s ipv6=off;

    proxy_cache_path   /var/cache/nginx levels=1:2 keys_zone=tufcache:5m inactive=1h max_size=500g;

    log_format json_combined escape=json '{ "time_local": "$time_local", '
     '"host": "$host", '
     '"remote_addr": "$remote_addr", '
     '"remote_user": "$remote_user", '
     '"request": "$request", '
     '"status": "$status", '
     '"body_bytes_sent": "$body_bytes_sent", '
     '"request_time": "$request_time", '
     '"http_referrer": "$http_referer", '
     '"http_user_agent": "$http_user_agent" }';

    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    server_names_hash_bucket_size 64;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    error_log /dev/stderr info;

    gzip off;

    server {
        charset utf-8;
        listen 8080;
        server_name _;

        root        /app;
        index       index.html;

        set_real_ip_from  0.0.0.0/0;
        access_log       /dev/stdout json_combined;
        error_log        /dev/stderr info;

        set $tuf_repo_url 'https://tuf.werf.io';

        location = /healthz {
            access_log  off;
            add_header Content-Type text/plain;
            return 200;
        }

        # src - /download/release/1.2/alpha/windows-arm64/werf
        # target - tuf_repo_url/targets/releases/0.1.3/darwin-arm64/bin/werf
        # $1 - group (MAJ.MIN)
        # $2 - channel
        # $3 - OS
        # $4 - arch
        # $5 - target_file
        location ~ ^/download/release/([0-9.]+)/(alpha|beta|early-access|stable|rock-solid)/([a-zA-Z0-9]+)-([a-zA-Z0-9_-]+)/(.+) {
            set $group $1;
            set $channel $2;
            set $os $3;
            set $arch $4;
            set $target $5;
            set $version '';

            rewrite_by_lua_file tuf-router.lua;
        }

        location /targets/channels {
          internal;
          add_header Cache-Control 'no-store, no-cache';
          proxy_cache tufcache;
          proxy_cache_valid 200 301 302 5m;
          proxy_cache_valid any 1m;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
          proxy_ignore_headers Expires Cache-Control Set-Cookie;
          # Change this to variable after merging repos
          proxy_pass https://storage.googleapis.com/werf-tuf$uri;
        }

        error_page 404 https://$host/404.html?uri=$uri;
    }
}
