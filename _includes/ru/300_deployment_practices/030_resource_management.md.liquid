В этом разделе мы покажем, как управлять ресурсами приложений в Kubernetes.

## Приоритет

`priorityClassName` влияет на то, какие Pod'ы будут schedule'иться в первую очередь, а также на то, какие Pod'ы могут быть «вытеснены» (evicted) планировщиком, если места для новых Pod'ов на узлах не осталось.

Потребуется создать несколько ресурсов типа PriorityClass и ассоциировать их с Pod'ами через `priorityClassName`. Набор PriorityClass'ов может выглядеть примерно так:

* *Cluster*. `Priority > 10000`. Критичные для функционирования кластера компоненты, такие как kube-apiserver.
* *Daemonsets*. `Priority: 10000`. Обычно мы хотим, чтобы Pod'ы DaemonSet'ов не вытеснялись с узлов обычными приложениями.
* *Production-high*. `Priority: 9000`. Stateful-приложения.
* *Production-medium*. `Priority: 8000`. Stateless-приложения.
* *Production-low*. `Priority: 7000`. Менее критичные приложения.
* *Default*. `Priority: 0`. Приложения для окружений не категории production.

Это предохранит нас от внезапных evict'ов важных компонентов и позволит более важным приложениям вытеснять менее важные при недостатке узлов.
