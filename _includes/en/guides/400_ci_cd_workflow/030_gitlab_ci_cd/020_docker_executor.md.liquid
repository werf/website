## GitLab runner configuration (config.toml)

Make sure you meet all system requirements and select one of the available operating modes (depending on the capabilities of your GitLab runner) and navigate to it.

### Linux kernel with rootless OverlayFS

Basic runner configuration:

```toml
[[runners]]
  name = "docker-runner-for-werf"
  executor = "docker"
  # ...
  [runners.docker]
    security_opt = ["seccomp:unconfined", "apparmor:unconfined"]
    # ...
```

### Linux kernel without rootless OverlayFS and privileged container

Basic runner configuration:

```toml
[[runners]]
  name = "docker-runner-for-werf"
  executor = "docker"
  # ...
  [runners.docker]
    privileged = true
    # ...
```

### Linux kernel without rootless OverlayFS and non-privileged container

Basic runner configuration:

```toml
[[runners]]
  name = "docker-runner-for-werf"
  executor = "docker"
  # ...
  [runners.docker]
    security_opt = ["seccomp:unconfined", "apparmor:unconfined"]
    devices = ["/dev/fuse"]
    # ...
```

## Project configuration (gitlab-ci.yml)

Below is a basic build and deploy job for a project:

```yaml
stages:
  - build-and-deploy

Build and deploy application:
  stage: build-and-deploy
  image: registry.werf.io/werf/werf
  script:
    - source $(werf ci-env gitlab --as-file)
    - werf converge
  tags: ["docker-runner-for-werf"]
```
