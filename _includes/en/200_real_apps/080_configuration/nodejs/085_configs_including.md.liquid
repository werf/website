После передачи переменных окружения в контейнер остаётся только подставить их в конфигурационных
файлах приложения.

Чтобы единообразно управлять конфигурацией приложения, установим модуль `config`:

```shell
npm i config
```


Этот модуль позволит переопределять конфигурацию в зависимости от типа окружения, а также
использовать переменные окружения. Это конфигурационный файл со значениями по умолчанию:

{% include snippetcut_example path="config/default.json" syntax="json" examples=page.examples %}

Здесь задается переопределение конфигурации приложения через переменные окружения:

{% include snippetcut_example path="config/custom-environment-variables.json" syntax="json" examples=page.examples %}

К сожалению, sequelize нельзя использовать с модулем `config`, так как в конфиг первого определяются
все окружения, а у `config` окружения делятся по файлам. Чтобы обойти это ограничение, можно
переписать конфигурацию sequelize на JavaScript и подставить переменные окружения с помощью `node`:

{% include snippetcut_example path="config/database.js" syntax="javascript" examples=page.examples %}
